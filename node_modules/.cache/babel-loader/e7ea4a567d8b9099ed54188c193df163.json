{"ast":null,"code":"var _jsxFileName = \"/home/cyf/Desktop/homework/restcountryapi/src/App.js\";\n// eslint-disable-next-line\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport CountriesContainer from \"./CountriesContainer\";\nimport SearchBox from \"./SearchBox\";\nimport RegionDropDown from \"./RegionDropDown\";\nimport FullCountryInformation from \"./FullCountryInformation\"; //need to add a back button which will simply set displayFullCountry as null\n\nfunction App() {\n  // eslint-disable-next-line\n  let data = require(\"./data.json\");\n\n  let regionsList = [\"Asia\"];\n  let [displayFullCountry, setdisplayFullCountry] = useState(null);\n  let [searchValue, setSearchValue] = useState(\"\");\n  let [countriesList, setCountriesList] = useState(data);\n  let [theme, setTheme] = useState(\"light\"); //this function sets the valye of displayFullCountry to the clicked country then it does conditional rendering between main content and full display of selected country.\n\n  function clickCountry(country) {\n    setdisplayFullCountry(country);\n  }\n\n  function changeTheme() {\n    if (theme === \"light\") setTheme(\"dark\");else setTheme(\"light\");\n  }\n\n  function CreateRegionsList() {\n    for (let i = 0; i < data.length; i++) {\n      let region = data[i].region;\n\n      if (!regionsList.includes(region)) // If does not include then add\n        {\n          regionsList.push(region);\n        }\n    }\n  }\n\n  CreateRegionsList();\n\n  function selectedRegion(value) {\n    let regionList = data.filter(country => country.region.toLowerCase().includes(value.toLowerCase()));\n    setCountriesList(regionList);\n  }\n\n  function searchAndUpdate(inputValue) {\n    setSearchValue(inputValue);\n    let searchList = data.filter(country => country.name.toLowerCase().includes(searchValue.toLowerCase()));\n    setCountriesList(searchList);\n  }\n\n  function goToMainPage() {\n    setdisplayFullCountry(null);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 3\n    }\n  }, displayFullCountry ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"change-theme\",\n    onClick: changeTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 3\n    }\n  }, \"Change Theme\"), /*#__PURE__*/React.createElement(FullCountryInformation, {\n    countryInfo: displayFullCountry,\n    goToMainPage: goToMainPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 3\n    }\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"change-theme\",\n    onClick: changeTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 3\n    }\n  }, \"Change Theme\"), /*#__PURE__*/React.createElement(SearchBox, {\n    searchUpdate: searchAndUpdate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(RegionDropDown, {\n    Regions: regionsList,\n    updateRegion: selectedRegion,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(CountriesContainer, {\n    countries: countriesList,\n    clickCountry: clickCountry,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }))); // return(<fullCountryInfo displayFullCountry={displayFullCountry} />)\n} // data.map( (country) => function(country){\n//   console.log(\"I am morr inside\")\n//   console.log(country.region)\n//   let region=country.region;\n//   if( !regionsList.includes(region) ) // If does not include then add\n//   {\n//     regionsList.concat(region);\n//   }\n// } )\n\n\nexport default App;","map":{"version":3,"sources":["/home/cyf/Desktop/homework/restcountryapi/src/App.js"],"names":["React","useState","useEffect","CountriesContainer","SearchBox","RegionDropDown","FullCountryInformation","App","data","require","regionsList","displayFullCountry","setdisplayFullCountry","searchValue","setSearchValue","countriesList","setCountriesList","theme","setTheme","clickCountry","country","changeTheme","CreateRegionsList","i","length","region","includes","push","selectedRegion","value","regionList","filter","toLowerCase","searchAndUpdate","inputValue","searchList","name","goToMainPage"],"mappings":"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","sourcesContent":["// eslint-disable-next-line\nimport React,{useState,useEffect} from 'react';\nimport './App.css';\nimport CountriesContainer from \"./CountriesContainer\"\nimport SearchBox from \"./SearchBox\"\nimport RegionDropDown from \"./RegionDropDown\"\nimport FullCountryInformation from \"./FullCountryInformation\"\n\n//need to add a back button which will simply set displayFullCountry as null\nfunction App() {\n\n  // eslint-disable-next-line\n  let data=require(\"./data.json\");\n  let regionsList=[\"Asia\"];\n\n  let [displayFullCountry,setdisplayFullCountry]=useState(null);\n  let [searchValue,setSearchValue]=useState(\"\");\n  let [countriesList,setCountriesList]=useState(data);\n  let [theme,setTheme]=useState(\"light\");\n\n  //this function sets the valye of displayFullCountry to the clicked country then it does conditional rendering between main content and full display of selected country.\n  function clickCountry(country)\n  {\n    setdisplayFullCountry(country);\n  }\n\n  function changeTheme()\n  {\n    if(theme===\"light\")\n    setTheme(\"dark\")\n    else\n    setTheme(\"light\")\n  }\n \n\n  function CreateRegionsList()\n  {\n    for(let i=0;i<data.length;i++)\n    {\n      let region=data[i].region;\n      if( !(regionsList.includes(region)) ) // If does not include then add\n      {\n        regionsList.push(region);\n      }\n    }\n  }\n\n  CreateRegionsList();\n\n  function selectedRegion(value)\n  {\n    let regionList=data.filter(country=>country.region.toLowerCase().includes(value.toLowerCase()))\n    setCountriesList(regionList);\n  }\n\n  function searchAndUpdate(inputValue)\n  {\n    setSearchValue(inputValue);\n    let searchList=data.filter(country=>country.name.toLowerCase().includes(searchValue.toLowerCase()))\n    setCountriesList(searchList);\n  }\n\n  function goToMainPage()\n  {\n    setdisplayFullCountry(null);\n  }\n\n  return (\n  <div className={theme}>\n    {\n      displayFullCountry? (\n  <>\n  <button className=\"change-theme\" onClick={changeTheme}>Change Theme</button>\n  <FullCountryInformation countryInfo={displayFullCountry} goToMainPage={goToMainPage}/>\n  </>\n  \n  )\n  :\n  (<div>\n  <button className=\"change-theme\" onClick={changeTheme}>Change Theme</button>\n    <SearchBox searchUpdate={searchAndUpdate}/>\n    <RegionDropDown Regions={regionsList} updateRegion={selectedRegion}/>\n    <CountriesContainer countries={countriesList} clickCountry={clickCountry}/>\n    </div>)\n    }\n  </div> \n  );\n\n  // return(<fullCountryInfo displayFullCountry={displayFullCountry} />)\n}\n\n// data.map( (country) => function(country){\n//   console.log(\"I am morr inside\")\n//   console.log(country.region)\n//   let region=country.region;\n//   if( !regionsList.includes(region) ) // If does not include then add\n//   {\n//     regionsList.concat(region);\n//   }\n\n// } )\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}