{"ast":null,"code":"var _jsxFileName = \"/home/cyf/Desktop/homework/restcountryapi/src/App.js\";\n// eslint-disable-next-line\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport CountriesContainer from \"./CountriesContainer\";\nimport SearchBox from \"./SearchBox\";\nimport RegionDropDown from \"./RegionDropDown\";\nimport fullCountryInfo from \"./fullCountryInfo\";\n\nfunction App() {\n  // eslint-disable-next-line\n  let data = require(\"./data.json\");\n\n  let regionsList = [\"Asia\"];\n  let display;\n  let [searchValue, setSearchValue] = useState(\"\");\n  let [countriesList, setCountriesList] = useState(data);\n\n  function CreateRegionsList() {\n    for (let i = 0; i < data.length; i++) {\n      let region = data[i].region;\n\n      if (!regionsList.includes(region)) // If does not include then add\n        {\n          regionsList.push(region);\n        }\n    } // console.log(regionsList)\n\n  }\n\n  CreateRegionsList();\n\n  function selectedRegion(value) {\n    let regionList = data.filter(country => country.region.toLowerCase().includes(value.toLowerCase()));\n    setCountriesList(regionList);\n  }\n\n  function searchAndUpdate(inputValue) {\n    setSearchValue(inputValue);\n    let searchList = data.filter(country => country.name.toLowerCase().includes(searchValue.toLowerCase()));\n    setCountriesList(searchList);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(SearchBox, {\n    searchUpdate: searchAndUpdate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 3\n    }\n  }), /*#__PURE__*/React.createElement(RegionDropDown, {\n    Regions: regionsList,\n    updateRegion: selectedRegion,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 3\n    }\n  }), /*#__PURE__*/React.createElement(CountriesContainer, {\n    countries: countriesList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 3\n    }\n  }));\n} // data.map( (country) => function(country){\n//   console.log(\"I am morr inside\")\n//   console.log(country.region)\n//   let region=country.region;\n//   if( !regionsList.includes(region) ) // If does not include then add\n//   {\n//     regionsList.concat(region);\n//   }\n// } )\n\n\nexport default App;","map":{"version":3,"sources":["/home/cyf/Desktop/homework/restcountryapi/src/App.js"],"names":["React","useState","useEffect","CountriesContainer","SearchBox","RegionDropDown","fullCountryInfo","App","data","require","regionsList","display","searchValue","setSearchValue","countriesList","setCountriesList","CreateRegionsList","i","length","region","includes","push","selectedRegion","value","regionList","filter","country","toLowerCase","searchAndUpdate","inputValue","searchList","name"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,OAAO,WAAP;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AAEA,SAASC,GAAT,GAAe;AAEb;AACA,MAAIC,IAAI,GAACC,OAAO,CAAC,aAAD,CAAhB;;AACA,MAAIC,WAAW,GAAC,CAAC,MAAD,CAAhB;AAEA,MAAIC,OAAJ;AAEA,MAAI,CAACC,WAAD,EAAaC,cAAb,IAA6BZ,QAAQ,CAAC,EAAD,CAAzC;AACA,MAAI,CAACa,aAAD,EAAeC,gBAAf,IAAiCd,QAAQ,CAACO,IAAD,CAA7C;;AAEA,WAASQ,iBAAT,GACA;AACE,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACT,IAAI,CAACU,MAAnB,EAA0BD,CAAC,EAA3B,EACA;AACE,UAAIE,MAAM,GAACX,IAAI,CAACS,CAAD,CAAJ,CAAQE,MAAnB;;AACA,UAAI,CAAET,WAAW,CAACU,QAAZ,CAAqBD,MAArB,CAAN,EAAsC;AACtC;AACET,UAAAA,WAAW,CAACW,IAAZ,CAAiBF,MAAjB;AACD;AACF,KARH,CASE;;AACD;;AAEDH,EAAAA,iBAAiB;;AAEjB,WAASM,cAAT,CAAwBC,KAAxB,EACA;AACE,QAAIC,UAAU,GAAChB,IAAI,CAACiB,MAAL,CAAYC,OAAO,IAAEA,OAAO,CAACP,MAAR,CAAeQ,WAAf,GAA6BP,QAA7B,CAAsCG,KAAK,CAACI,WAAN,EAAtC,CAArB,CAAf;AACAZ,IAAAA,gBAAgB,CAACS,UAAD,CAAhB;AACD;;AAED,WAASI,eAAT,CAAyBC,UAAzB,EACA;AACEhB,IAAAA,cAAc,CAACgB,UAAD,CAAd;AACA,QAAIC,UAAU,GAACtB,IAAI,CAACiB,MAAL,CAAYC,OAAO,IAAEA,OAAO,CAACK,IAAR,CAAaJ,WAAb,GAA2BP,QAA3B,CAAoCR,WAAW,CAACe,WAAZ,EAApC,CAArB,CAAf;AACAZ,IAAAA,gBAAgB,CAACe,UAAD,CAAhB;AACD;;AAED,sBAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,SAAD;AAAW,IAAA,YAAY,EAAEF,eAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,eAEA,oBAAC,cAAD;AAAgB,IAAA,OAAO,EAAElB,WAAzB;AAAsC,IAAA,YAAY,EAAEY,cAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,eAGA,oBAAC,kBAAD;AAAoB,IAAA,SAAS,EAAER,aAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHA,CAFA;AASD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAEA,eAAeP,GAAf","sourcesContent":["// eslint-disable-next-line\nimport React,{useState,useEffect} from 'react';\nimport './App.css';\nimport CountriesContainer from \"./CountriesContainer\"\nimport SearchBox from \"./SearchBox\"\nimport RegionDropDown from \"./RegionDropDown\"\nimport fullCountryInfo from \"./fullCountryInfo\"\n\nfunction App() {\n\n  // eslint-disable-next-line\n  let data=require(\"./data.json\");\n  let regionsList=[\"Asia\"];\n\n  let display\n\n  let [searchValue,setSearchValue]=useState(\"\");\n  let [countriesList,setCountriesList]=useState(data);\n\n  function CreateRegionsList()\n  {\n    for(let i=0;i<data.length;i++)\n    {\n      let region=data[i].region;\n      if( !(regionsList.includes(region)) ) // If does not include then add\n      {\n        regionsList.push(region);\n      }\n    }\n    // console.log(regionsList)\n  }\n\n  CreateRegionsList();\n\n  function selectedRegion(value)\n  {\n    let regionList=data.filter(country=>country.region.toLowerCase().includes(value.toLowerCase()))\n    setCountriesList(regionList);\n  }\n\n  function searchAndUpdate(inputValue)\n  {\n    setSearchValue(inputValue);\n    let searchList=data.filter(country=>country.name.toLowerCase().includes(searchValue.toLowerCase()))\n    setCountriesList(searchList);\n  }\n\n  return (\n  \n  <div>\n  <SearchBox searchUpdate={searchAndUpdate}/>\n  <RegionDropDown Regions={regionsList} updateRegion={selectedRegion}/>\n  <CountriesContainer countries={countriesList}/>\n  </div>\n  \n  );\n}\n\n// data.map( (country) => function(country){\n//   console.log(\"I am morr inside\")\n//   console.log(country.region)\n//   let region=country.region;\n//   if( !regionsList.includes(region) ) // If does not include then add\n//   {\n//     regionsList.concat(region);\n//   }\n\n// } )\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}