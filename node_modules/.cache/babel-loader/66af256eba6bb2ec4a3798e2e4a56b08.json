{"ast":null,"code":"var _jsxFileName = \"/home/cyf/Desktop/homework/restcountryapi/src/App.js\";\n// eslint-disable-next-line\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport CountriesContainer from \"./CountriesContainer\";\nimport SearchBox from \"./SearchBox\";\nimport RegionDropDown from \"./RegionDropDown\";\n\nfunction App() {\n  // eslint-disable-next-line\n  let data = require(\"./data.json\");\n\n  let regionsList = [\"Asia\"];\n  console.log(\"haha\" + data.length); // console.log(data);\n\n  let [searchValue, setSearchValue] = useState(\"\");\n  let [countriesList, setCountriesList] = useState(data); // console.log(searchValue)\n\n  function CreateRegionsList() {\n    console.log(\"Hey I am in \");\n\n    for (let i = 0; i < data.length; i++) {\n      let region = data[i].region;\n\n      if (!regionsList.includes(region)) // If does not include then add\n        {\n          regionsList.push(region);\n        }\n    }\n  }\n\n  CreateRegionsList();\n\n  function searchAndUpdate(inputValue) {\n    setSearchValue(inputValue);\n    let searchList = data.filter(country => country.name.toLowerCase().includes(searchValue.toLowerCase()));\n    setCountriesList(searchList);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(SearchBox, {\n    searchUpdate: searchAndUpdate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 3\n    }\n  }), /*#__PURE__*/React.createElement(RegionDropDown, {\n    Regions: regionsList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 3\n    }\n  }), /*#__PURE__*/React.createElement(CountriesContainer, {\n    countries: countriesList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 3\n    }\n  }));\n} // data.map( (country) => function(country){\n//   console.log(\"I am morr inside\")\n//   console.log(country.region)\n//   let region=country.region;\n//   if( !regionsList.includes(region) ) // If does not include then add\n//   {\n//     regionsList.concat(region);\n//   }\n// } )\n\n\nexport default App;","map":{"version":3,"sources":["/home/cyf/Desktop/homework/restcountryapi/src/App.js"],"names":["React","useState","useEffect","CountriesContainer","SearchBox","RegionDropDown","App","data","require","regionsList","console","log","length","searchValue","setSearchValue","countriesList","setCountriesList","CreateRegionsList","i","region","includes","push","searchAndUpdate","inputValue","searchList","filter","country","name","toLowerCase"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,OAAO,WAAP;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,SAASC,GAAT,GAAe;AAEb;AACA,MAAIC,IAAI,GAACC,OAAO,CAAC,aAAD,CAAhB;;AACA,MAAIC,WAAW,GAAC,CAAC,MAAD,CAAhB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAOJ,IAAI,CAACK,MAAxB,EALa,CAMb;;AAEA,MAAI,CAACC,WAAD,EAAaC,cAAb,IAA6Bb,QAAQ,CAAC,EAAD,CAAzC;AACA,MAAI,CAACc,aAAD,EAAeC,gBAAf,IAAiCf,QAAQ,CAACM,IAAD,CAA7C,CATa,CAUb;;AAEA,WAASU,iBAAT,GACA;AACEP,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;;AAEA,SAAI,IAAIO,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACX,IAAI,CAACK,MAAnB,EAA0BM,CAAC,EAA3B,EACA;AACE,UAAIC,MAAM,GAACZ,IAAI,CAACW,CAAD,CAAJ,CAAQC,MAAnB;;AACA,UAAI,CAAEV,WAAW,CAACW,QAAZ,CAAqBD,MAArB,CAAN,EAAsC;AACtC;AACEV,UAAAA,WAAW,CAACY,IAAZ,CAAiBF,MAAjB;AACD;AACF;AACF;;AAEDF,EAAAA,iBAAiB;;AAEjB,WAASK,eAAT,CAAyBC,UAAzB,EACA;AACET,IAAAA,cAAc,CAACS,UAAD,CAAd;AACA,QAAIC,UAAU,GAACjB,IAAI,CAACkB,MAAL,CAAYC,OAAO,IAAEA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BR,QAA3B,CAAoCP,WAAW,CAACe,WAAZ,EAApC,CAArB,CAAf;AACAZ,IAAAA,gBAAgB,CAACQ,UAAD,CAAhB;AACD;;AAED,sBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAER,oBAAC,SAAD;AAAW,IAAA,YAAY,EAAEF,eAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFQ,eAGR,oBAAC,cAAD;AAAgB,IAAA,OAAO,EAAEb,WAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHQ,eAIR,oBAAC,kBAAD;AAAoB,IAAA,SAAS,EAAEM,aAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJQ,CAAR;AAOD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAEA,eAAeT,GAAf","sourcesContent":["// eslint-disable-next-line\nimport React,{useState,useEffect} from 'react';\nimport './App.css';\nimport CountriesContainer from \"./CountriesContainer\"\nimport SearchBox from \"./SearchBox\"\nimport RegionDropDown from \"./RegionDropDown\"\n\nfunction App() {\n\n  // eslint-disable-next-line\n  let data=require(\"./data.json\");\n  let regionsList=[\"Asia\"];\n  console.log(\"haha\"+data.length)\n  // console.log(data);\n\n  let [searchValue,setSearchValue]=useState(\"\");\n  let [countriesList,setCountriesList]=useState(data);\n  // console.log(searchValue)\n\n  function CreateRegionsList()\n  {\n    console.log(\"Hey I am in \")\n\n    for(let i=0;i<data.length;i++)\n    {\n      let region=data[i].region;\n      if( !(regionsList.includes(region)) ) // If does not include then add\n      {\n        regionsList.push(region);\n      }\n    }\n  }\n\n  CreateRegionsList();\n\n  function searchAndUpdate(inputValue)\n  {\n    setSearchValue(inputValue);\n    let searchList=data.filter(country=>country.name.toLowerCase().includes(searchValue.toLowerCase()))\n    setCountriesList(searchList);\n  }\n\n  return (<div>\n\n  <SearchBox searchUpdate={searchAndUpdate}/>\n  <RegionDropDown Regions={regionsList}/>\n  <CountriesContainer countries={countriesList}/>\n  </div>\n  );\n}\n\n// data.map( (country) => function(country){\n//   console.log(\"I am morr inside\")\n//   console.log(country.region)\n//   let region=country.region;\n//   if( !regionsList.includes(region) ) // If does not include then add\n//   {\n//     regionsList.concat(region);\n//   }\n\n// } )\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}